#version 330
uniform float manul_rough;
uniform float envir_brightness;
uniform float envir_fresnel_brightness;
uniform float max_brightness;
uniform float min_ggx_roughness;
uniform float max_ggx_roughness;
uniform float emissive_intensity;
uniform float diffuse_intensity;
uniform float u_light_scale;
uniform float dir_ambient_intensity;
uniform float l_pos_x;
uniform float l_pos_y;
uniform float l_pos_z;
uniform vec4 env_shadow_factor;
uniform float AO_slider;
uniform vec3 force_pixel_color;
uniform float rim_power1;
uniform float rim_multi1;
uniform float u_rim_start1;
uniform float u_rim_end1;
uniform float emissive_bloom;
uniform float illum_multi;
uniform float bloom_range;
uniform float NoiseSpeed;
uniform float NoiseSize;
uniform float Noiseoffset;
uniform float ChangeAmount;
uniform float change_offset;
uniform vec4 color1;
uniform vec4 color2;
uniform vec4 color3;
uniform vec4 color4;
uniform float change_line_scale;
uniform vec4 u_shadowmap_info;
uniform vec2 shadow_bias_factor;
uniform float FrameTime;
uniform vec4 ShadowLightAttr[5];
uniform vec4 camera_pos;
uniform mat4 inverse_view;
uniform mat4 view_mat;
uniform float AlphaMtl;
uniform mat4 envSHR;
uniform mat4 envSHG;
uniform mat4 envSHB;
uniform sampler2D sam_diffuse_0;
uniform sampler2D sam_other0_1;
uniform sampler2D sam_other1_2;
uniform sampler2D sam_other3_3;
uniform sampler2D sam_other4_5;
uniform sampler2D sam_other5_6;
uniform sampler2DShadow sam_shadow_4;
in vec4 v_texture0;
in vec4 v_texture3;
in vec3 v_texture5;
in vec3 v_texture6;
in vec3 vertex_normal_world;
in vec4 v_texture10;
out vec4 gFragColor;
void main(){
float sam_other5_6_bias = -1.0;
float sam_other1_2_bias = -1.0;
float sam_diffuse_0_bias = 0.0;
float sam_other0_1_bias = 0.0;
float sam_other3_3_bias = -1.0;
float local_0;
(local_0 = 0.69999999);
vec3 local_3;
float local_4;
vec3 local_5;
vec3 local_6;
vec2 local_7;
float local_8;
vec2 local_9 = v_texture0.xy;
// 法线贴图
vec4 local_11 = texture(sam_other5_6, local_9, sam_other5_6_bias);
vec2 local_12 = local_11.xy;
vec2 local_15 = (local_12 * 2.0);
vec2 local_17 = vec2(1.0, 1.0);
vec2 local_18 = (local_15 - local_17);
float local_19 = local_18.x;
float local_20 = local_18.y;
vec3 local_21 = (v_texture5 * local_19);
vec3 local_22 = (local_21 * local_0);
vec3 local_23 = (v_texture6 * local_20);
vec3 local_24 = (local_23 * local_0);
vec3 local_25 = (local_22 + local_24);
vec3 local_26 = (local_25 + vertex_normal_world);
// normalWS
vec3 local_27 = normalize(local_26);
// 法线贴图(B通道)
float local_29 = local_11.z;
// normalWS
(local_3 = local_27);
// 法线贴图(B通道)
(local_4 = local_29);
(local_5 = v_texture6);
(local_6 = v_texture5);
(local_7 = local_18);
// 法线贴图(B通道)
(local_8 = local_29);
vec3 local_36;
vec2 local_37 = (-local_7);
float local_38 = local_37.x;
float local_39 = local_37.y;
vec3 local_40 = (local_6 * local_38);
vec3 local_41 = (local_5 * local_39);
vec3 local_42 = (local_40 + local_41);
vec3 local_43 = (local_42 + vertex_normal_world);
// flipNormalWS
vec3 local_44 = normalize(local_43);
// flipNormalWS
(local_36 = local_44);
float local_45;
float local_46;
{
float local_48 = shadow_bias_factor.x;
float local_49 = shadow_bias_factor.y;
float local_52 = v_texture10.w;
float local_53 = (1.0 - local_52);
float local_54 = (local_48 * local_53);
float local_55 = (local_54 + local_49);
float local_57 = clamp(local_55, 0.0, 1.0);
vec2 local_58 = v_texture10.xy;
float local_61 = v_texture10.z;
float local_63 = (local_61 - local_57);
float local_64;
float local_66 = (local_63 * 0.5);
float local_67 = (local_66 + 0.5);
(local_64 = local_67);
float local_68;
vec4 local_76 = vec4(local_58.x, local_58.y, local_64, 1.0);
float local_77 = textureProj(sam_shadow_4, local_76);
(local_68 = local_77);
float local_78 = local_58.x;
float local_79 = local_58.y;
float local_80 = (1.0 - local_78);
float local_81 = (1.0 - local_79);
vec4 local_82 = vec4(local_78, local_80, local_79, local_81);
vec4 local_83 = sign(local_82);
vec4 local_85 = vec4(1.0, 1.0, 1.0, 1.0);
float local_86 = dot(local_83, local_85);
float local_87 = step(3.5, local_86);
float local_88 = (1.0 - local_87);
float local_89 = (local_68 + local_88);
float local_90 = clamp(local_89, 0.0, 1.0);
// Shadowmap
(local_46 = local_90);
}
// Shadowmap
(local_45 = local_46);
vec3 local_94;
vec3 local_95;
vec4 local_121 = ShadowLightAttr[1];
vec3 local_122 = local_121.xyz;
vec3 local_124 = (1.0 * local_122);
vec4 local_126 = ShadowLightAttr[3];
vec3 local_127 = local_126.xyz;
// 光照方向（与Unity相反）
vec3 local_129 = normalize(local_127);
// 光照颜色
(local_94 = local_124);
// 光照方向（与Unity相反）
(local_95 = local_129);
float local_130 = local_95.x;
float local_131 = local_95.y;
float local_132 = local_95.z;
vec3 local_133 = vec3(local_130, local_131, local_132);
// 光照方向（与Unity相反）
vec3 local_134 = normalize(local_133);
vec3 local_135 = camera_pos.xyz;
vec3 local_137 = v_texture3.xyz;
vec3 local_139 = (local_135 - local_137);
// viewDirectionWS
vec3 local_140 = normalize(local_139);
vec3 local_141 = (local_134 * u_light_scale);
vec3 local_142 = (local_140 - local_134);
// halfDirectionWS
vec3 local_143 = normalize(local_142);
float local_144 = dot(local_140, local_143);
// VoH 01
float local_146 = clamp(local_144, 0.0, 1.0);
float local_147 = dot(local_3, local_143);
// NoH 01
float local_148 = max(0.0, local_147);
float local_149 = dot(local_140, local_3);
// NoV 01
float local_150 = clamp(local_149, 0.0, 1.0);
mat3 local_151 = mat3(view_mat);
// normalVS
vec3 local_152 = (local_151 * local_3);
float local_153 = (FrameTime * NoiseSpeed);
float local_155 = (0.5 * ChangeAmount);
float local_156 = (0.5 + local_155);
float local_157 = (local_153 * local_156);
// UV
vec2 local_158 = v_texture0.xy;
vec2 local_160 = (local_158 * NoiseSize);
float local_162 = (2.0 - ChangeAmount);
vec2 local_163 = (local_160 * local_162);
vec2 local_164 = vec2(0.0, local_157);
vec2 local_165 = (local_163 + local_164);
// normalVS.xy
vec2 local_166 = local_152.xy;
// normalVS.z
float local_167 = local_152.z;
vec2 local_168 = (local_166 * Noiseoffset);
vec2 local_169 = (local_165 + local_168);
vec4 local_170 = texture(sam_other1_2, local_169, sam_other1_2_bias);
vec4 local_171 = texture(sam_diffuse_0, local_158, sam_diffuse_0_bias);
vec4 local_172 = texture(sam_other0_1, local_158, sam_other0_1_bias);
vec4 local_173 = texture(sam_other3_3, local_158, sam_other3_3_bias);
float local_174;
float local_175;
float local_176;
float local_177;
float local_185 = local_173.x;
float local_186 = local_173.y;
float local_187 = local_173.z;
float local_190 = (local_186 - 0.5);
float local_192 = (local_190 * 2.0);
float local_193 = clamp(local_192, 0.0, 1.0);
float local_195 = step(local_186, 0.25);
(local_174 = local_185);
(local_175 = local_187);
(local_176 = local_193);
(local_177 = local_195);
float local_196;
(local_196 = 0.0);
float local_210 = local_170.x;
float local_211 = local_170.y;
float local_213 = (local_211 * 2.0);
float local_214 = (local_196 * 2.0);
float local_215 = (local_213 + local_214);
float local_216 = (local_215 - 1.0);
float local_217 = clamp(local_216, 0.0, 1.0);
float local_218 = (local_217 * local_196);
float local_220 = local_172.z;
float local_222 = (1.0 - local_150);
float local_224 = mix(local_220, local_222, 0.1);
float local_225 = (1.0 - local_210);
float local_226 = mix(local_224, local_225, change_offset);
float local_227 = (ChangeAmount + change_line_scale);
float local_228 = smoothstep(ChangeAmount, local_227, local_226);
float local_229 = (ChangeAmount - change_line_scale);
float local_230 = smoothstep(local_229, ChangeAmount, local_226);
float local_231 = (1.0 - local_230);
float local_232 = (1.0 - local_228);
float local_233 = (local_232 - local_231);
float local_234 = clamp(local_233, 0.0, 1.0);
vec3 local_235 = (-local_141);
float local_236 = dot(local_3, local_235);
float local_237;
float local_251 = clamp(local_236, 0.0, 1.0);
float local_252 = min(local_251, local_45);
(local_237 = local_252);
float local_253 = -1.0;
float local_254 = clamp(local_237, local_253, 0.0);
float local_255;
vec3 local_256 = (-local_134);
float local_257 = dot(local_36, local_256);
float local_258 = clamp(local_257, 0.0, 1.0);
float local_261 = mix(1.0, local_45, 0.5);
float local_262 = min(local_258, local_261);
(local_255 = local_262);
vec3 local_263 = local_171.xyz;
vec3 local_265 = (local_263 * local_263);
vec3 local_266 = (local_265 * diffuse_intensity);
vec3 local_267 = color4.xyz;
vec3 local_269 = vec3(local_218, local_218, local_218);
vec3 local_270 = mix(local_266, local_267, local_269);
float local_271 = (1.0 - local_174);
vec3 local_272 = (local_271 * local_270);
mat3 local_273 = mat3(inverse_view);
vec3 local_274 = vec3(l_pos_x, l_pos_y, l_pos_z);
vec3 local_275 = (local_273 * local_274);
vec3 local_276 = normalize(local_275);
float local_277 = dot(local_3, local_276);
float local_278 = clamp(local_277, 0.0, 1.0);
vec3 local_279;
float local_281 = mix(1.0, local_4, local_150);
float local_284 = (0.5 - local_4);
float local_285 = clamp(local_284, 0.0, 1.0);
float local_286 = (2.0 * local_285);
float local_287 = (local_286 * AO_slider);
float local_288 = mix(local_281, local_4, local_287);
vec3 local_289 = vec3(local_288, local_288, local_288);
(local_279 = local_289);
float local_292 = local_171.x;
float local_293 = local_171.y;
float local_294 = local_171.z;
float local_296 = max(local_292, local_293);
float local_297 = max(local_296, local_294);
float local_299 = (local_297 - 0.38999999);
vec3 local_300 = vec3(local_299, local_299, local_299);
vec3 local_301 = vec3(0.1, 0.1, 0.1);
vec3 local_302 = max(local_300, local_301);
vec3 local_303 = (local_263 - local_302);
vec3 local_304 = clamp(local_303, 0.0, 1.0);
vec3 local_305;
vec3 local_307 = vec3(1.0, 1.0, 1.0);
(local_305 = local_307);
float local_308 = (manul_rough * local_218);
float local_309 = (local_175 + local_308);
float local_310 = clamp(local_309, 0.0, 1.0);
vec3 local_311;
vec3 local_312;
vec3 local_346 = vec3(0.0, 0.0, 0.0);
vec3 local_347 = vec3(0.0, 0.0, 0.0);
(local_311 = local_346);
(local_312 = local_347);
vec3 local_348;
vec3 local_349 = (-local_140);
vec3 local_350 = reflect(local_349, local_3);
(local_348 = local_350);
float local_353 = local_152.x;
float local_354 = local_152.y;
float local_356 = (-local_167);
vec3 local_357 = vec3(local_353, local_354, local_356);
vec3 local_358;
{
vec4 local_361 = vec4(local_357.x, local_357.y, local_357.z, 1.0);
vec4 local_362 = (envSHR * local_361);
float local_363 = dot(local_361, local_362);
vec4 local_364 = (envSHG * local_361);
float local_365 = dot(local_361, local_364);
vec4 local_366 = (envSHB * local_361);
float local_367 = dot(local_361, local_366);
vec3 local_368 = vec3(local_363, local_365, local_367);
(local_358 = local_368);
}
vec3 local_370 = env_shadow_factor.xyz;
vec3 local_372 = vec3(1.0, 1.0, 1.0);
vec3 local_373 = vec3(local_255, local_255, local_255);
vec3 local_374 = mix(local_370, local_372, local_373);
vec3 local_375 = vec3(local_255, local_255, local_255);
vec3 local_376 = (local_375 + local_311);
vec3 local_377 = (local_376 * local_94);
vec3 local_378 = (local_374 * local_358);
vec3 local_379 = (local_358 * local_312);
vec3 local_380 = (local_378 + local_379);
vec3 local_381 = (local_380 * envir_brightness);
vec3 local_382 = (local_377 + local_381);
vec3 local_383 = (local_272 * local_382);
vec3 local_385 = vec3(0.039999999, 0.039999999, 0.039999999);
vec3 local_386 = vec3(local_271, local_271, local_271);
vec3 local_387 = mix(local_270, local_385, local_386);
float local_388 = mix(min_ggx_roughness, max_ggx_roughness, local_175);
float local_389;
(local_389 = local_148);
vec3 local_428;
{
float local_431 = (1.0 - local_146);
float local_433;
{
float local_436 = 7.2134752;
float local_438 = (local_436 + 1.0892349);
float local_439 = (local_438 * local_431);
float local_440 = (local_439 - local_438);
float local_441 = exp2(local_440);
(local_433 = local_441);
}
vec3 local_443 = vec3(1.0, 1.0, 1.0);
vec3 local_444 = (local_443 - local_387);
vec3 local_445 = (local_444 * local_433);
vec3 local_446 = (local_387 + local_445);
(local_428 = local_446);
}
float local_448;
{
float local_450 = (local_388 * local_388);
float local_451 = (local_450 * local_450);
float local_452 = (local_389 * local_451);
float local_453 = (local_452 - local_389);
float local_454 = (local_453 * local_389);
float local_456 = (local_454 + 1.0);
float local_457 = (local_456 * local_456);
float local_458 = (local_451 / local_457);
float local_460 = min(local_458, 10000.0);
(local_448 = local_460);
}
float local_462;
{
float local_465 = (0.5 * local_388);
float local_466 = (0.5 + local_465);
float local_467 = (0.5 * local_388);
float local_468 = (0.5 + local_467);
float local_469 = (local_466 * local_468);
float local_471 = (1.0 - local_469);
float local_472 = (local_150 * local_471);
float local_473 = (local_472 + local_469);
float local_474 = (1.0 - local_469);
float local_475 = (local_237 * local_474);
float local_476 = (local_475 + local_469);
float local_478 = (local_473 * local_476);
float local_479 = (0.25 / local_478);
(local_462 = local_479);
}
vec3 local_481 = (local_448 * local_428);
vec3 local_482 = (local_481 * local_462);
vec3 local_483 = (local_482 * local_237);
vec3 local_484;
vec3 local_485;
{
float local_488 = (local_310 / 0.14);
float local_493 = local_348.z;
float local_494 = local_348.x;
float local_495 = local_348.y;
float local_497 = atan(local_493, local_494);
float local_498 = (local_497 + 3.141593);
float local_499 = (local_498 * 0.15915491);
float local_500 = acos(local_495);
float local_501 = (local_500 * 0.3183099);
vec2 local_502 = vec2(local_499, local_501);
vec4 local_503 = textureLod(sam_other4_5, local_502, local_488);
vec3 local_504 = local_503.xyz;
float local_505 = local_503.w;
vec3 local_506 = (local_504 * local_505);
vec3 local_507 = (local_506 * max_brightness);
(local_485 = local_507);
}
vec3 local_509;
{
float local_512 = -1.0;
float local_514 = -0.0275;
float local_516 = -0.57200003;
vec4 local_518 = vec4(local_512, local_514, local_516, 0.022);
float local_522 = -0.039999999;
vec4 local_523 = vec4(1.0, 0.0425, 1.04, local_522);
vec4 local_524 = (local_388 * local_518);
vec4 local_525 = (local_524 + local_523);
float local_526 = local_525.x;
float local_527 = local_525.y;
float local_530 = (local_526 * local_526);
float local_532 = -9.2799997;
float local_533 = (local_532 * local_150);
float local_534 = exp2(local_533);
float local_535 = min(local_530, local_534);
float local_536 = (local_535 * local_526);
float local_537 = (local_536 + local_527);
float local_538 = -1.04;
vec2 local_539 = vec2(local_538, 1.04);
vec2 local_540 = (local_539 * local_537);
vec2 local_542 = local_525.zw;
vec2 local_543 = (local_540 + local_542);
float local_544 = local_543.x;
float local_545 = local_543.y;
vec3 local_546 = (local_387 * local_544);
vec3 local_547 = vec3(local_545, local_545, local_545);
vec3 local_548 = (local_547 * envir_fresnel_brightness);
vec3 local_549 = (local_546 + local_548);
(local_509 = local_549);
}
vec3 local_551 = (envir_brightness * local_509);
vec3 local_552 = (local_551 * local_485);
vec3 local_553 = (local_552 * local_374);
(local_484 = local_553);
float local_560 = (1.0 - local_150);
float local_561;
{
float local_564 = (rim_power1 * 1.442695);
float local_566 = (local_564 + 1.0892349);
float local_567 = (local_566 * local_560);
float local_568 = (local_567 - local_566);
float local_569 = exp2(local_568);
(local_561 = local_569);
}
float local_571 = local_172.x;
float local_572 = local_172.y;
float local_575 = (local_571 * local_210);
float local_576 = (local_571 + local_575);
float local_577 = (local_278 * dir_ambient_intensity);
float local_579 = pow(local_577, 3.0);
float local_580 = (local_576 + local_579);
float local_581 = smoothstep(u_rim_start1, u_rim_end1, local_561);
float local_582 = (local_581 * rim_multi1);
float local_583 = (local_580 + local_582);
float local_584 = (local_234 * 0.5);
float local_585 = (local_583 + local_584);
float local_586 = (local_585 * 2.0);
float local_587 = clamp(local_586, 0.0, 1.0);
vec4 local_588 = vec4(local_587, local_587, local_587, local_587);
vec4 local_589 = mix(color1, color2, local_588);
float local_590 = (local_585 - 0.5);
float local_591 = clamp(local_590, 0.0, 1.0);
float local_592 = (local_591 / 0.5);
vec4 local_593 = vec4(local_592, local_592, local_592, local_592);
vec4 local_594 = mix(local_589, color3, local_593);
vec3 local_595 = local_594.xyz;
vec3 local_597 = (emissive_intensity * local_595);
vec3 local_598 = (local_597 * local_595);
float local_599 = (1.0 - local_228);
vec3 local_600 = (local_598 * local_599);
float local_604 = mix(0.60000002, 1.0, local_237);
vec3 local_605 = (local_484 * local_604);
vec3 local_606 = (local_483 + local_605);
vec3 local_607 = (local_383 + local_606);
vec3 local_608 = (local_607 * local_305);
vec3 local_609 = (local_608 * local_228);
vec3 local_610 = (local_609 + local_600);
vec3 local_611 = (local_610 + force_pixel_color);
vec3 local_612;
(local_612 = local_611);
vec3 local_615 = vec3(0.18700001, 0.18700001, 0.18700001);
vec3 local_616 = (local_612 + local_615);
vec3 local_617 = (local_612 / local_616);
vec3 local_619 = (local_617 * 1.035);
float local_620 = (local_572 * AlphaMtl);
vec4 local_621 = vec4(local_619.x, local_619.y, local_619.z, local_620);
vec4 local_622;
(local_622 = local_621);
vec4 local_625;
(local_625 = local_622);
vec4 local_628;
(local_628 = local_625);
(gFragColor = local_628);
}
