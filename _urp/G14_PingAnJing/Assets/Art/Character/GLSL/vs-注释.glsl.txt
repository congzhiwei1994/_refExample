#version 330
uniform mat4 wvp;
uniform mat4 world;
uniform vec4 ShadowLightAttr[5];
uniform mat4 lvp;
in vec4 texcoord0;
in vec4 position;
in vec4 normal;
in vec4 tangent;
out vec4 v_texture0;		// xy: uv zw:0
out vec4 v_texture2;		// 世界空间顶点
out vec3 tangentWorld0;
out vec3 binormalWorld0;
out vec3 vertex_normal_world;	// 世界空间法线
out vec4 v_texture9;
void main(){
vec4 local_0;
vec4 local_1;
(local_0 = position);
(local_1 = normal);
vec4 local_2 = (wvp * local_0);
(gl_Position = local_2);
// local_3 为世界空间顶点
vec4 local_3 = (world * local_0);
mat3 local_4 = mat3(world);
// local_5 模型空间法线
vec3 local_5 = local_1.xyz;
vec3 local_7 = (local_4 * local_5);
// local_8 世界空间法线
vec3 local_8 = normalize(local_7);
vec2 local_9 = texcoord0.xy;
vec4 local_12 = vec4(local_9.x, local_9.y, 0.0, 0.0);
(v_texture0 = local_12);
vec3 local_13 = local_3.xyz;
vec4 local_16 = vec4(local_13.x, local_13.y, local_13.z, 1.0);
(v_texture2 = local_16);
(vertex_normal_world = local_8);
vec3 local_17 = tangent.xyz;
vec3 local_19 = (local_4 * local_17);
vec3 local_20 = normalize(local_19);
float local_24 = length(local_17);
float local_25 = step(1.5, local_24);
float local_26 = (2.0 * local_25);
float local_27 = (1.0 - local_26);
vec3 local_28 = cross(local_20, local_8);
vec3 local_29 = (local_28 * local_27);
vec3 local_30 = normalize(local_20);
(tangentWorld0 = local_30);
vec3 local_31 = normalize(local_29);
(binormalWorld0 = local_31);
vec4 local_33 = ShadowLightAttr[3];
vec3 local_34 = local_33.xyz;
vec2 local_36;
float local_37;
float local_38;
{
// TransformWorldToShadowCoord
vec4 local_40 = (lvp * local_3);
vec3 local_41 = local_40.xyz;
float local_42 = local_40.w;
vec3 local_43 = vec3(local_42, local_42, local_42);
// xyz/w
vec3 local_44 = (local_41 / local_43);
vec2 local_45 = local_44.xy;
float local_46 = local_44.z;
vec2 local_47;
vec2 local_49 = vec2(0.5, 0.5);
(local_47 = local_49);
vec2 local_53 = (local_45 * local_47);
vec2 local_55 = vec2(0.5, 0.5);
// local_56 = xy * 0.5 + 0.5
vec2 local_56 = (local_53 + local_55);
// 负NormalWS
vec3 local_57 = (-local_8);
// Light Dir
vec3 local_58 = normalize(local_34);
// -NormalWS dot Light
float local_59 = dot(local_57, local_58);
float local_60 = clamp(local_59, 0.0, 1.0);
(local_36 = local_56);
(local_37 = local_46);
(local_38 = local_60);
}
// xy除过w+编码，z除过w
vec4 local_62 = vec4(local_36.x, local_36.y, local_37, local_38);
(v_texture9 = local_62);
}
